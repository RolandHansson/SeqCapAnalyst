#This file matches probes to their corresponding exons and genes. 
#Declare variables
probes_file="$1" #Usually "probes.csv"
exons_file="$2" #Usually "exons_to_gene.list"
exon_scaffold="" #initial value
exon_scaffold_nr=0
verbose=1
#Read in all exons
#Sort?

#Store gene_name, exon_name, Scaffold, start and end
#sort?

#Read in all probes, Store Scaffold, start and end.
#For each probe,

>&2 echo "Starting probes_to_exons.sh, detecting file format..."

if grep -q "oordinates" "$probes_file" #If probe file format uses coordinates
then
[[ $verbose -eq 1 ]] && >&2 echo "'Coordinates' keyword detected"
while true
do
  read -r scaffold name seq rep str pos scaffold_nr start <&3 || break
  if [ "$scaffold" == "TargetID" ] #first line
  then #load actual first probe line
    read -r scaffold name seq rep str pos scaffold_nr start <&3 || break
    read -r exon_pos gene_name gene_length <&4 || break
    read -r exon_scaffold exon_start exon_end trash <<< `echo "$exon_pos" | cut -d '(' -f1 | tr ":-" "  "`
    exon_scaffold_nr=`echo "$exon_scaffold" | sed "s/.*fold//"` 
  fi
  read sca start end <<< `echo "$pos" | tr ":-" "  "` 
  pos=`echo $pos | sed "s/chrHt/Ht/"`  
#  echo -en "pos=$pos\n start=$start\n end=$end"
  #Go to correct scaffold
#  >&2 echo "comparing $scaffold_nr vs $exon_scaffold_nr"
  until [ "$scaffold_nr" -le "$exon_scaffold_nr" ] 
  do
    [[ $verbose -eq 1 ]] && >&2 echo "$scaffold_nr > $exon_scaffold_nr, loading new exon"
    read -r exon_pos gene_name gene_length <&4 || break
    read exon_scaffold exon_start exon_end trash <<< `echo "$exon_pos" | cut -d '(' -f1 | tr ":-" "  "`
    exon_scaffold_nr=`echo "$exon_scaffold" | sed "s/.*fold//"`
    #>&2 echo "new exon: $exon_pos, nr $exon_scaffold_nr"
#    echo "exon_scaffold=$exon_scaffold, exon_start=$exon_start, exon_end=$exon_end"
#    echo "checked $scaffold vs $exon_scaffold"
  done
   
  #Go to correct exon 
  #Unless probe overlaps exon start, proceed to next exon.
  until ( [ $start -ge $exon_start -a $start -le $exon_end ] || [ $exon_start -gt $end ] || [ $end -ge $exon_start -a $end -le $exon_end ] || [ $exon_start -ge $start -a $exon_start -le $end ] || [ $exon_end -ge $start -a $exon_end -le $end ])
  do
    [[ $verbose -eq 1 ]] && >&2 echo " ( $pos ) does not overlap ( $exon_pos ). Loading new exon"
    read -r exon_pos gene_name gene_length <&4 || break
    read exon_scaffold exon_start exon_end <<< `echo "$exon_pos" | cut -d '(' -f1 | tr ":-" "  "`
    exon_scaffold_nr=`echo "$exon_scaffold" | sed "s/.*fold//"` 
    
#    >&2 echo "$scaffold_nr <-> $exon_scaffold_nr"
    if [ $exon_scaffold_nr -gt $scaffold_nr ] ; then 
      [[ $verbose -eq 1 ]] && >&2 echo "SCAFFOLD DOESN'T MATCH!" 
      break
    elif [ $exon_start -gt $end ] ; then
      [[ $verbose -eq 1 ]] && >&2 echo "EXON TOO FAR AHEAD!" 
      break    
    fi
#    echo "checked $start vs $exon_start"
  done

  #>&2 echo "FOUND: $pos corresponds to $exon_pos"
  if [ "$scaffold" != "$exon_scaffold" ] ; then
    echo -e "$name\t$pos\t\t"
    >&2 echo -e "WARNING: probe ${scaffold}:$start-$end did not overlap with any exon. Loop is at exon $exon_pos"
  elif ( [ $start -ge $exon_start ] && [ $end -le $exon_end ] ) ; then #print line
    echo -e "$name\t$pos\t$exon_pos\t$gene_name"
  else #not an error
    echo -e "$name\t$pos\t$exon_pos\t$gene_name"
#    >&2 echo -e "Note: probe ${scaffold}:$start-$end is out of bounds of exon $exon_pos"
  fi       

    #Load next probe and continue (they are ordered) 
done 3< $probes_file 4< $exons_file

############################################
##### start-stop version of probes file ###############################################
############################################

elif grep -q "top" "$probes_file"
then
#[[ $verbose -eq 1 ]] && echo >&2 "Start and Stop detected"
while true
do
  read -r scaffold name seq rep str scaffold_nr start end <&3 || break
  [[ $verbose -eq 1 ]] && echo -e >&2 "\nNEW PROBE: probe scaffold: '$scaffold', start: '$start', end: '$end', scaffold_nr: '$scaffold_nr'\n\n"
  if [ "$scaffold" == "TargetID" ] #first line
  then #load actual first probe line
    read -r scaffold name seq rep str scaffold_nr start end <&3 || break
    read -r exon_pos gene_name gene_length <&4 || break
    read -r exon_scaffold exon_start exon_end trash <<< `echo "$exon_pos" | cut -d '(' -f1 | tr ":-" "  "`
    exon_scaffold_nr=`echo "$exon_scaffold" | sed "s/.*fold//" | tr -d ">"` 
  fi
    pos="${scaffold}:${start}-$end"
    sca=$scaffold
#  echo -en "pos=$pos\n start=$start\n end=$end"
  #Go to correct scaffold
  >&2 echo -e "\e[1A" "processing probe $name ($pos)                  "
  [[ $verbose -eq 1 ]] && >&2 echo "comparing $scaffold_nr ($pos) vs $exon_scaffold_nr($exon_pos)"
  until [ "$scaffold_nr" == "$exon_scaffold_nr" ] #|| [ "$scaffold_nr" -le "$exon_scaffold_nr" ]
  do
    [[ $verbose -eq 1 ]] && >&2 echo "'$scaffold_nr' > '$exon_scaffold_nr', loading new exon"
    read -r exon_pos gene_name gene_length <&4 || break
    read exon_scaffold exon_start exon_end trash <<< `echo "$exon_pos" | cut -d '(' -f1 | tr ":-" "  "`
    exon_scaffold_nr=`echo "$exon_scaffold" | sed "s/.*fold//"`
    [[ $verbose -eq 1 ]] && >&2 echo "new exon: $exon_pos, nr $exon_scaffold_nr"
    [[ $verbose -eq 1 ]] && >&2 echo "exon_scaffold=$exon_scaffold, exon_start=$exon_start, exon_end=$exon_end"
    [[ $verbose -eq 1 ]] && >&2 echo "checked $scaffold vs $exon_scaffold"
  done
      [[ $verbose -eq 1 ]] && >&2 echo "exon scaffold: '$exon_scaffold', exon_start: '$exon_start', exon_end: '$exon_end', trash: '$trash', exon_scaffold_nr: '$exon_scaffold_nr'" 
  #Go to correct exon 
  #Unless probe overlaps exon start, proceed to next exon.
  until ( [ $start -ge $exon_start -a $start -le $exon_end ] || [ $exon_start -gt $end ] || [ $end -ge $exon_start -a $end -le $exon_end ] || [ $exon_start -ge $start -a $exon_start -le $end ] || [ $exon_end -ge $start -a $exon_end -le $end ])
  do
    [[ $verbose -eq 1 ]] && >&2 echo " ( $pos ) does not overlap ( $exon_pos ). Loading new exon"
    read -r exon_pos gene_name gene_length <&4 || break
    [[ $verbose -eq 1 ]] && >&2 echo "exon_pos: $exon_pos, gene_name: $gene_name, gene_length: $gene_length"
    read exon_scaffold exon_start exon_end <<< `echo "$exon_pos" | cut -d '(' -f1 | tr ":-" "  "`
    exon_scaffold_nr=`echo "$exon_scaffold" | sed "s/.*fold//"` 
    
    [[ $verbose -eq 1 ]] && >&2 echo "$scaffold_nr <-> $exon_scaffold_nr"
    if [ ! "$exon_scaffold_nr" == "$scaffold_nr" ] && [ $exon_scaffold_nr -gt $scaffold_nr ] ; then 
      [[ $verbose -eq 1 ]] && >&2 echo "SCAFFOLD DOESN'T MATCH!" 
      break
    elif [ $exon_start -gt $end ] ; then
      [[ $verbose -eq 1 ]] && >&2 echo "EXON TOO FAR AHEAD!" 
      break    
    fi
    [[ $verbose -eq 1 ]] && >&2  echo "checked $start vs $exon_start"
  done

  [[ $verbose -eq 1 ]] && >&2 echo "FOUND: '$pos' corresponds to '$exon_pos"
  if [ "$scaffold" != "$exon_scaffold" ] ; then
    echo -e "$name\t$pos\t\t"
    >&2 echo -e "WARNING: probe ${scaffold}:$start-$end did not overlap with any exon. Loop is at exon $exon_pos"
  elif ( [ $start -ge $exon_start ] && [ $end -le $exon_end ] ) ; then #print line
    echo -e "$name\t$pos\t$exon_pos\t$gene_name"
  else #not an error
    echo -e "$name\t$pos\t$exon_pos\t$gene_name"
#    >&2 echo -e "Note: probe ${scaffold}:$start-$end is out of bounds of exon $exon_pos"
  fi       

    #Load next probe and continue (they are ordered) 
done 3< <( cat $probes_file | grep -v "^#" | grep . | sort -V -k6,7 ) 4< <( cat $exons_file | sort -k1 -V )

fi
